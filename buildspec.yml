version: 0.2

cache:
  paths:
    - '/root/go/pkg/mod/**/*'
    - '/root/.cache/go-build/**/*'

phases:
  install:
    runtime-versions:
      golang: 1.23
      nodejs: 22
      python: 3.13
    commands:
      - docker system prune -af --volumes
      - apt-get clean || true
      - df -h
      
      # Configure Go environment
      - echo "Setting up Go environment..."
      - go version
      - export GOMODCACHE=/root/go/pkg/mod
      - export GOCACHE=/root/.cache/go-build
      - export GOTMPDIR=/root/go-tmp
      - mkdir -p /root/go/pkg/mod /root/.cache/go-build $GOTMPDIR
      - echo "GOMODCACHE=/root/go/pkg/mod" >> /etc/environment
      - echo "GOCACHE=/root/.cache/go-build" >> /etc/environment
      - echo "GOTMPDIR=/root/go-tmp" >> /etc/environment
      
      # Setup Node.js environment  
      - echo "Setting up Node.js environment..."
      - node --version
      - npm --version
      - npm install -g yarn
      - yarn --version
      
      # Verify Python environment
      - echo "Setting up Python environment..."
      - python3 --version
      - which python3

  pre_build:
    commands:
      - echo "Cache paths configured for Go modules and build cache"
      - chmod +x bloat-cache.sh
      - ./bloat-cache.sh
      - echo "=== AFTER CACHE BLOAT ==="
      - USAGE=$(df / | awk 'NR==2 {print $5}' | sed 's/%//'); echo "Current disk usage is ${USAGE}%"; if [ $USAGE -gt 70 ]; then echo "WARNING - Disk usage above 70%"; du -hs /mce-cache/* 2>/dev/null || echo "No cache found"; rm -rf /mce-cache/*; echo "Cache cleanup completed"; df -h /; else echo "Disk usage within acceptable limits"; fi

  build:
    commands:
      - echo "Build phase handled by GitHub Actions workflow"

  post_build:
    commands:
      - echo "Post-build phase complete"
      - df -h
